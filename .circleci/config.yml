# https://circleci.com/docs/2.0/language-android/#sample-configuration
# https://github.com/shadowsocks/shadowsocks-android/blob/master/.circleci/config.yml

version: 2
jobs:
  build:
    environment:
      # https://circleci.com/docs/2.0/language-android/#handling-out-of-memory-errors
      JVM_OPTS: -Xmx3200m
      WD: code
    working_directory: ~/code
    docker:
      # https://circleci.com/docs/2.0/circleci-images/
      # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/android/images
      # https://en.wikipedia.org/wiki/Debian_version_history
      # - image: circleci/android:lastest
      # - image: circleci/android:api-25-alpha
      - image: circleci/android:api-28-ndk
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Overwrite working directory
          command: |
            cd ~
            rm -rfv $WD
            git clone --recurse-submodules https://github.com/CGDF-Github/SSD-Android.git $WD
      - run:
          name: Add fancy build info
          command: |
            sed --in-place "/<body>/ a \        <p>\
            &#128296; \
            <a href="https://github.com/TheCGDF/SSD-Android/tree/$(git rev-parse HEAD)">\
            r$(printf "%02d" $(git rev-list --count HEAD)).$(git rev-parse --short HEAD)\
            </a> \
            w/ &#128156; \
            by <a href="https://circleci.com/gh/Un1Gfn/SSD-ci/$CIRCLE_BUILD_NUM">CircleCi</a> \
            &#128347; $(TZ=Asia/Shanghai date +'%F %T UTC%-:::z') \
            </p>" mobile/src/main/res/raw/about.html
            git diff
      # - restore_cache:
      #     key: jars-{{ checksum "build.gradle" }}
      # - run:
      #     name: Download Dependencies
      #     # https://circleci.com/docs/2.0/language-android/#disabling-pre-dexing-to-improve-build-performance
      #     command: ./gradlew androidDependencies
      # - save_cache:
      #     paths:
      #       - ~/.gradle
      #       - ~/.android/build-cache
      #     key: jars-{{ checksum "build.gradle" }}
      - run:
          name: Build release APK
          command: |
            ./gradlew assembleRelease
      - run:
          name: Align & sign APK
          command: |
            export PATH=$PATH:/opt/android/sdk/build-tools/28.0.3/
            yes \
              | keytool \
              -genkeypair \
              -alias my-alias \
              -keyalg RSA \
              -keysize 2048 \
              -validity 10000 \
              -keypass 000000 \
              -keystore my-release-key.jks \
              -storepass 000000 \
              -v || true
            for i in {mobile,tv}/build/outputs/apk/release/*.apk; do
              ORIG="$i"
              ALIGNED="${i%-unsigned.apk}-unsigned-aligned.apk"
              SIGNED="${i%-unsigned.apk}-signed-aligned.apk"
              zipalign -v -p 4 $ORIG $ALIGNED
              apksigner sign --ks my-release-key.jks --ks-pass pass:000000 --out $SIGNED $ALIGNED
            done
            cp -v my-release-key.jks mobile/build/outputs/apk/release/
            cp -v my-release-key.jks tv/build/outputs/apk/release/
            rm -fv my-release-key.jks

      # https://circleci.com/docs/2.0/artifacts/ 
      # https://circleci.com/docs/2.0/artifacts/#downloading-all-artifacts-for-a-build-on-circleci
      - store_artifacts:
          path: mobile/build/outputs/apk/release/
          destination: mobile
      - store_artifacts:
          path: tv/build/outputs/apk/release/
          destination: tv

      # - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      #     path: app/build/test-results
      # # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples